// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.6.0
//   protoc               v3.21.12
// source: PulsarApi.proto

/* eslint-disable */

export const protobufPackage = "pulsar.proto";

export enum CompressionType {
  NONE = 0,
  LZ4 = 1,
  ZLIB = 2,
  ZSTD = 3,
  SNAPPY = 4,
  UNRECOGNIZED = -1,
}

export enum ProducerAccessMode {
  Shared = 0,
  Exclusive = 1,
  WaitForExclusive = 2,
  ExclusiveWithFencing = 3,
  UNRECOGNIZED = -1,
}

export enum ServerError {
  UnknownError = 0,
  MetadataError = 1,
  PersistenceError = 2,
  AuthenticationError = 3,
  AuthorizationError = 4,
  ConsumerBusy = 5,
  ServiceNotReady = 6,
  ProducerBlockedQuotaExceededError = 7,
  ProducerBlockedQuotaExceededException = 8,
  ChecksumError = 9,
  UnsupportedVersionError = 10,
  TopicNotFound = 11,
  SubscriptionNotFound = 12,
  ConsumerNotFound = 13,
  TooManyRequests = 14,
  TopicTerminatedError = 15,
  ProducerBusy = 16,
  InvalidTopicName = 17,
  IncompatibleSchema = 18,
  ConsumerAssignError = 19,
  TransactionCoordinatorNotFound = 20,
  InvalidTxnStatus = 21,
  NotAllowedError = 22,
  TransactionConflict = 23,
  TransactionNotFound = 24,
  ProducerFenced = 25,
  UNRECOGNIZED = -1,
}

export enum AuthMethod {
  AuthMethodNone = 0,
  AuthMethodYcaV1 = 1,
  AuthMethodAthens = 2,
  UNRECOGNIZED = -1,
}

export enum ProtocolVersion {
  v0 = 0,
  v1 = 1,
  v2 = 2,
  v3 = 3,
  v4 = 4,
  v5 = 5,
  v6 = 6,
  v7 = 7,
  v8 = 8,
  v9 = 9,
  v10 = 10,
  v11 = 11,
  v12 = 12,
  v13 = 13,
  v14 = 14,
  v15 = 15,
  v16 = 16,
  v17 = 17,
  v18 = 18,
  v19 = 19,
  v20 = 20,
  v21 = 21,
  UNRECOGNIZED = -1,
}

export enum KeySharedMode {
  AUTO_SPLIT = 0,
  STICKY = 1,
  UNRECOGNIZED = -1,
}

export enum TxnAction {
  COMMIT = 0,
  ABORT = 1,
  UNRECOGNIZED = -1,
}

export interface Schema {
  name: string;
  schemaData: Uint8Array;
  type: SchemaType;
  properties: KeyValue[];
}

export enum SchemaType {
  None = 0,
  String = 1,
  Json = 2,
  Protobuf = 3,
  Avro = 4,
  Bool = 5,
  Int8 = 6,
  Int16 = 7,
  Int32 = 8,
  Int64 = 9,
  Float = 10,
  Double = 11,
  Date = 12,
  Time = 13,
  Timestamp = 14,
  KeyValue = 15,
  Instant = 16,
  LocalDate = 17,
  LocalTime = 18,
  LocalDateTime = 19,
  ProtobufNative = 20,
  AutoConsume = 21,
  UNRECOGNIZED = -1,
}

export interface MessageIdData {
  ledgerId: number;
  entryId: number;
  partition?: number | undefined;
  batchIndex?: number | undefined;
  ackSet: number[];
  batchSize?: number | undefined;
  firstChunkMessageId?: MessageIdData | undefined;
}

export interface KeyValue {
  key: string;
  value: string;
}

export interface KeyLongValue {
  key: string;
  value: number;
}

export interface IntRange {
  start: number;
  end: number;
}

export interface EncryptionKeys {
  key: string;
  value: Uint8Array;
  metadata: KeyValue[];
}

export interface MessageMetadata {
  producerName: string;
  sequenceId: number;
  publishTime: number;
  properties: KeyValue[];
  replicatedFrom?: string | undefined;
  partitionKey?: string | undefined;
  replicateTo: string[];
  compression?: CompressionType | undefined;
  uncompressedSize?: number | undefined;
  numMessagesInBatch?: number | undefined;
  eventTime?: number | undefined;
  encryptionKeys: EncryptionKeys[];
  encryptionAlgo?: string | undefined;
  encryptionParam?: Uint8Array | undefined;
  schemaVersion?: Uint8Array | undefined;
  partitionKeyB64Encoded?: boolean | undefined;
  orderingKey?: Uint8Array | undefined;
  deliverAtTime?: number | undefined;
  markerType?: number | undefined;
  txnidLeastBits?: number | undefined;
  txnidMostBits?: number | undefined;
  highestSequenceId?: number | undefined;
  nullValue?: boolean | undefined;
  uuid?: string | undefined;
  numChunksFromMsg?: number | undefined;
  totalChunkMsgSize?: number | undefined;
  chunkId?: number | undefined;
  nullPartitionKey?: boolean | undefined;
}

export interface SingleMessageMetadata {
  properties: KeyValue[];
  partitionKey?: string | undefined;
  payloadSize: number;
  compactedOut?: boolean | undefined;
  eventTime?: number | undefined;
  partitionKeyB64Encoded?: boolean | undefined;
  orderingKey?: Uint8Array | undefined;
  sequenceId?: number | undefined;
  nullValue?: boolean | undefined;
  nullPartitionKey?: boolean | undefined;
}

export interface BrokerEntryMetadata {
  brokerTimestamp?: number | undefined;
  index?: number | undefined;
}

export interface CommandConnect {
  clientVersion: string;
  authMethod?: AuthMethod | undefined;
  authMethodName?: string | undefined;
  authData?: Uint8Array | undefined;
  protocolVersion?: number | undefined;
  proxyToBrokerUrl?: string | undefined;
  originalPrincipal?: string | undefined;
  originalAuthData?: string | undefined;
  originalAuthMethod?: string | undefined;
  featureFlags?: FeatureFlags | undefined;
  proxyVersion?: string | undefined;
}

export interface FeatureFlags {
  supportsAuthRefresh?: boolean | undefined;
  supportsBrokerEntryMetadata?: boolean | undefined;
  supportsPartialProducer?: boolean | undefined;
  supportsTopicWatchers?: boolean | undefined;
  supportsGetPartitionedMetadataWithoutAutoCreation?: boolean | undefined;
}

export interface CommandConnected {
  serverVersion: string;
  protocolVersion?: number | undefined;
  maxMessageSize?: number | undefined;
  featureFlags?: FeatureFlags | undefined;
}

export interface CommandAuthResponse {
  clientVersion?: string | undefined;
  response?: AuthData | undefined;
  protocolVersion?: number | undefined;
}

export interface CommandAuthChallenge {
  serverVersion?: string | undefined;
  challenge?: AuthData | undefined;
  protocolVersion?: number | undefined;
}

export interface AuthData {
  authMethodName?: string | undefined;
  authData?: Uint8Array | undefined;
}

export interface KeySharedMeta {
  keySharedMode: KeySharedMode;
  hashRanges: IntRange[];
  allowOutOfOrderDelivery?: boolean | undefined;
}

export interface CommandSubscribe {
  topic: string;
  subscription: string;
  subType: CommandSubscribeSubType;
  consumerId: number;
  requestId: number;
  consumerName?: string | undefined;
  priorityLevel?: number | undefined;
  durable?: boolean | undefined;
  startMessageId?: MessageIdData | undefined;
  metadata: KeyValue[];
  readCompacted?: boolean | undefined;
  schema?: Schema | undefined;
  initialPosition?: CommandSubscribeInitialPosition | undefined;
  replicateSubscriptionState?: boolean | undefined;
  forceTopicCreation?: boolean | undefined;
  startMessageRollbackDurationSec?: number | undefined;
  keySharedMeta?: KeySharedMeta | undefined;
  subscriptionProperties: KeyValue[];
  consumerEpoch?: number | undefined;
}

export enum CommandSubscribeSubType {
  Exclusive = 0,
  Shared = 1,
  Failover = 2,
  Key_Shared = 3,
  UNRECOGNIZED = -1,
}

export enum CommandSubscribeInitialPosition {
  Latest = 0,
  Earliest = 1,
  UNRECOGNIZED = -1,
}

export interface CommandPartitionedTopicMetadata {
  topic: string;
  requestId: number;
  originalPrincipal?: string | undefined;
  originalAuthData?: string | undefined;
  originalAuthMethod?: string | undefined;
  metadataAutoCreationEnabled?: boolean | undefined;
}

export interface CommandPartitionedTopicMetadataResponse {
  partitions?: number | undefined;
  requestId: number;
  response?: CommandPartitionedTopicMetadataResponseLookupType | undefined;
  error?: ServerError | undefined;
  message?: string | undefined;
}

export enum CommandPartitionedTopicMetadataResponseLookupType {
  Success = 0,
  Failed = 1,
  UNRECOGNIZED = -1,
}

export interface CommandLookupTopic {
  topic: string;
  requestId: number;
  authoritative?: boolean | undefined;
  originalPrincipal?: string | undefined;
  originalAuthData?: string | undefined;
  originalAuthMethod?: string | undefined;
  advertisedListenerName?: string | undefined;
  properties: KeyValue[];
}

export interface CommandLookupTopicResponse {
  brokerServiceUrl?: string | undefined;
  brokerServiceUrlTls?: string | undefined;
  response?: CommandLookupTopicResponseLookupType | undefined;
  requestId: number;
  authoritative?: boolean | undefined;
  error?: ServerError | undefined;
  message?: string | undefined;
  proxyThroughServiceUrl?: boolean | undefined;
}

export enum CommandLookupTopicResponseLookupType {
  Redirect = 0,
  Connect = 1,
  Failed = 2,
  UNRECOGNIZED = -1,
}

export interface CommandProducer {
  topic: string;
  producerId: number;
  requestId: number;
  producerName?: string | undefined;
  encrypted?: boolean | undefined;
  metadata: KeyValue[];
  schema?: Schema | undefined;
  epoch?: number | undefined;
  userProvidedProducerName?: boolean | undefined;
  producerAccessMode?: ProducerAccessMode | undefined;
  topicEpoch?: number | undefined;
  txnEnabled?: boolean | undefined;
  initialSubscriptionName?: string | undefined;
}

export interface CommandSend {
  producerId: number;
  sequenceId: number;
  numMessages?: number | undefined;
  txnidLeastBits?: number | undefined;
  txnidMostBits?: number | undefined;
  highestSequenceId?: number | undefined;
  isChunk?: boolean | undefined;
  marker?: boolean | undefined;
  messageId?: MessageIdData | undefined;
}

export interface CommandSendReceipt {
  producerId: number;
  sequenceId: number;
  messageId?: MessageIdData | undefined;
  highestSequenceId?: number | undefined;
}

export interface CommandSendError {
  producerId: number;
  sequenceId: number;
  error: ServerError;
  message: string;
}

export interface CommandMessage {
  consumerId: number;
  messageId: MessageIdData;
  redeliveryCount?: number | undefined;
  ackSet: number[];
  consumerEpoch?: number | undefined;
}

export interface CommandAck {
  consumerId: number;
  ackType: CommandAckAckType;
  messageId: MessageIdData[];
  validationError?: CommandAckValidationError | undefined;
  properties: KeyLongValue[];
  txnidLeastBits?: number | undefined;
  txnidMostBits?: number | undefined;
  requestId?: number | undefined;
}

export enum CommandAckAckType {
  Individual = 0,
  Cumulative = 1,
  UNRECOGNIZED = -1,
}

export enum CommandAckValidationError {
  UncompressedSizeCorruption = 0,
  DecompressionError = 1,
  ChecksumMismatch = 2,
  BatchDeSerializeError = 3,
  DecryptionError = 4,
  UNRECOGNIZED = -1,
}

export interface CommandAckResponse {
  consumerId: number;
  txnidLeastBits?: number | undefined;
  txnidMostBits?: number | undefined;
  error?: ServerError | undefined;
  message?: string | undefined;
  requestId?: number | undefined;
}

export interface CommandActiveConsumerChange {
  consumerId: number;
  isActive?: boolean | undefined;
}

export interface CommandFlow {
  consumerId: number;
  messagePermits: number;
}

export interface CommandUnsubscribe {
  consumerId: number;
  requestId: number;
  force?: boolean | undefined;
}

export interface CommandSeek {
  consumerId: number;
  requestId: number;
  messageId?: MessageIdData | undefined;
  messagePublishTime?: number | undefined;
}

export interface CommandReachedEndOfTopic {
  consumerId: number;
}

export interface CommandTopicMigrated {
  resourceId: number;
  resourceType: CommandTopicMigratedResourceType;
  brokerServiceUrl?: string | undefined;
  brokerServiceUrlTls?: string | undefined;
}

export enum CommandTopicMigratedResourceType {
  Producer = 0,
  Consumer = 1,
  UNRECOGNIZED = -1,
}

export interface CommandCloseProducer {
  producerId: number;
  requestId: number;
  assignedBrokerServiceUrl?: string | undefined;
  assignedBrokerServiceUrlTls?: string | undefined;
}

export interface CommandCloseConsumer {
  consumerId: number;
  requestId: number;
  assignedBrokerServiceUrl?: string | undefined;
  assignedBrokerServiceUrlTls?: string | undefined;
}

export interface CommandRedeliverUnacknowledgedMessages {
  consumerId: number;
  messageIds: MessageIdData[];
  consumerEpoch?: number | undefined;
}

export interface CommandSuccess {
  requestId: number;
  schema?: Schema | undefined;
}

export interface CommandProducerSuccess {
  requestId: number;
  producerName: string;
  lastSequenceId?: number | undefined;
  schemaVersion?: Uint8Array | undefined;
  topicEpoch?: number | undefined;
  producerReady?: boolean | undefined;
}

export interface CommandError {
  requestId: number;
  error: ServerError;
  message: string;
}

export interface CommandPing {
}

export interface CommandPong {
}

export interface CommandConsumerStats {
  requestId: number;
  consumerId: number;
}

export interface CommandConsumerStatsResponse {
  requestId: number;
  errorCode?: ServerError | undefined;
  errorMessage?: string | undefined;
  msgRateOut?: number | undefined;
  msgThroughputOut?: number | undefined;
  msgRateRedeliver?: number | undefined;
  consumerName?: string | undefined;
  availablePermits?: number | undefined;
  unackedMessages?: number | undefined;
  blockedConsumerOnUnackedMsgs?: boolean | undefined;
  address?: string | undefined;
  connectedSince?: string | undefined;
  type?: string | undefined;
  msgRateExpired?: number | undefined;
  msgBacklog?: number | undefined;
  messageAckRate?: number | undefined;
}

export interface CommandGetLastMessageId {
  consumerId: number;
  requestId: number;
}

export interface CommandGetLastMessageIdResponse {
  lastMessageId: MessageIdData;
  requestId: number;
  consumerMarkDeletePosition?: MessageIdData | undefined;
}

export interface CommandGetTopicsOfNamespace {
  requestId: number;
  namespace: string;
  mode?: CommandGetTopicsOfNamespaceMode | undefined;
  topicsPattern?: string | undefined;
  topicsHash?: string | undefined;
}

export enum CommandGetTopicsOfNamespaceMode {
  PERSISTENT = 0,
  NON_PERSISTENT = 1,
  ALL = 2,
  UNRECOGNIZED = -1,
}

export interface CommandGetTopicsOfNamespaceResponse {
  requestId: number;
  topics: string[];
  filtered?: boolean | undefined;
  topicsHash?: string | undefined;
  changed?: boolean | undefined;
}

export interface CommandWatchTopicList {
  requestId: number;
  watcherId: number;
  namespace: string;
  topicsPattern: string;
  topicsHash?: string | undefined;
}

export interface CommandWatchTopicListSuccess {
  requestId: number;
  watcherId: number;
  topic: string[];
  topicsHash: string;
}

export interface CommandWatchTopicUpdate {
  watcherId: number;
  newTopics: string[];
  deletedTopics: string[];
  topicsHash: string;
}

export interface CommandWatchTopicListClose {
  requestId: number;
  watcherId: number;
}

export interface CommandGetSchema {
  requestId: number;
  topic: string;
  schemaVersion?: Uint8Array | undefined;
}

export interface CommandGetSchemaResponse {
  requestId: number;
  errorCode?: ServerError | undefined;
  errorMessage?: string | undefined;
  schema?: Schema | undefined;
  schemaVersion?: Uint8Array | undefined;
}

export interface CommandGetOrCreateSchema {
  requestId: number;
  topic: string;
  schema: Schema;
}

export interface CommandGetOrCreateSchemaResponse {
  requestId: number;
  errorCode?: ServerError | undefined;
  errorMessage?: string | undefined;
  schemaVersion?: Uint8Array | undefined;
}

export interface CommandTcClientConnectRequest {
  requestId: number;
  tcId: number;
}

export interface CommandTcClientConnectResponse {
  requestId: number;
  error?: ServerError | undefined;
  message?: string | undefined;
}

export interface CommandNewTxn {
  requestId: number;
  txnTtlSeconds?: number | undefined;
  tcId?: number | undefined;
}

export interface CommandNewTxnResponse {
  requestId: number;
  txnidLeastBits?: number | undefined;
  txnidMostBits?: number | undefined;
  error?: ServerError | undefined;
  message?: string | undefined;
}

export interface CommandAddPartitionToTxn {
  requestId: number;
  txnidLeastBits?: number | undefined;
  txnidMostBits?: number | undefined;
  partitions: string[];
}

export interface CommandAddPartitionToTxnResponse {
  requestId: number;
  txnidLeastBits?: number | undefined;
  txnidMostBits?: number | undefined;
  error?: ServerError | undefined;
  message?: string | undefined;
}

export interface Subscription {
  topic: string;
  subscription: string;
}

export interface CommandAddSubscriptionToTxn {
  requestId: number;
  txnidLeastBits?: number | undefined;
  txnidMostBits?: number | undefined;
  subscription: Subscription[];
}

export interface CommandAddSubscriptionToTxnResponse {
  requestId: number;
  txnidLeastBits?: number | undefined;
  txnidMostBits?: number | undefined;
  error?: ServerError | undefined;
  message?: string | undefined;
}

export interface CommandEndTxn {
  requestId: number;
  txnidLeastBits?: number | undefined;
  txnidMostBits?: number | undefined;
  txnAction?: TxnAction | undefined;
}

export interface CommandEndTxnResponse {
  requestId: number;
  txnidLeastBits?: number | undefined;
  txnidMostBits?: number | undefined;
  error?: ServerError | undefined;
  message?: string | undefined;
}

export interface CommandEndTxnOnPartition {
  requestId: number;
  txnidLeastBits?: number | undefined;
  txnidMostBits?: number | undefined;
  topic?: string | undefined;
  txnAction?: TxnAction | undefined;
  txnidLeastBitsOfLowWatermark?: number | undefined;
}

export interface CommandEndTxnOnPartitionResponse {
  requestId: number;
  txnidLeastBits?: number | undefined;
  txnidMostBits?: number | undefined;
  error?: ServerError | undefined;
  message?: string | undefined;
}

export interface CommandEndTxnOnSubscription {
  requestId: number;
  txnidLeastBits?: number | undefined;
  txnidMostBits?: number | undefined;
  subscription?: Subscription | undefined;
  txnAction?: TxnAction | undefined;
  txnidLeastBitsOfLowWatermark?: number | undefined;
}

export interface CommandEndTxnOnSubscriptionResponse {
  requestId: number;
  txnidLeastBits?: number | undefined;
  txnidMostBits?: number | undefined;
  error?: ServerError | undefined;
  message?: string | undefined;
}

export interface BaseCommand {
  type: BaseCommandType;
  connect?: CommandConnect | undefined;
  connected?: CommandConnected | undefined;
  subscribe?: CommandSubscribe | undefined;
  producer?: CommandProducer | undefined;
  send?: CommandSend | undefined;
  sendReceipt?: CommandSendReceipt | undefined;
  sendError?: CommandSendError | undefined;
  message?: CommandMessage | undefined;
  ack?: CommandAck | undefined;
  flow?: CommandFlow | undefined;
  unsubscribe?: CommandUnsubscribe | undefined;
  success?: CommandSuccess | undefined;
  error?: CommandError | undefined;
  closeProducer?: CommandCloseProducer | undefined;
  closeConsumer?: CommandCloseConsumer | undefined;
  producerSuccess?: CommandProducerSuccess | undefined;
  ping?: CommandPing | undefined;
  pong?: CommandPong | undefined;
  redeliverUnacknowledgedMessages?: CommandRedeliverUnacknowledgedMessages | undefined;
  partitionMetadata?: CommandPartitionedTopicMetadata | undefined;
  partitionMetadataResponse?: CommandPartitionedTopicMetadataResponse | undefined;
  lookupTopic?: CommandLookupTopic | undefined;
  lookupTopicResponse?: CommandLookupTopicResponse | undefined;
  consumerStats?: CommandConsumerStats | undefined;
  consumerStatsResponse?: CommandConsumerStatsResponse | undefined;
  reachedEndOfTopic?: CommandReachedEndOfTopic | undefined;
  seek?: CommandSeek | undefined;
  getLastMessageId?: CommandGetLastMessageId | undefined;
  getLastMessageIdResponse?: CommandGetLastMessageIdResponse | undefined;
  activeConsumerChange?: CommandActiveConsumerChange | undefined;
  getTopicsOfNamespace?: CommandGetTopicsOfNamespace | undefined;
  getTopicsOfNamespaceResponse?: CommandGetTopicsOfNamespaceResponse | undefined;
  getSchema?: CommandGetSchema | undefined;
  getSchemaResponse?: CommandGetSchemaResponse | undefined;
  authChallenge?: CommandAuthChallenge | undefined;
  authResponse?: CommandAuthResponse | undefined;
  ackResponse?: CommandAckResponse | undefined;
  getOrCreateSchema?: CommandGetOrCreateSchema | undefined;
  getOrCreateSchemaResponse?: CommandGetOrCreateSchemaResponse | undefined;
  newTxn?: CommandNewTxn | undefined;
  newTxnResponse?: CommandNewTxnResponse | undefined;
  addPartitionToTxn?: CommandAddPartitionToTxn | undefined;
  addPartitionToTxnResponse?: CommandAddPartitionToTxnResponse | undefined;
  addSubscriptionToTxn?: CommandAddSubscriptionToTxn | undefined;
  addSubscriptionToTxnResponse?: CommandAddSubscriptionToTxnResponse | undefined;
  endTxn?: CommandEndTxn | undefined;
  endTxnResponse?: CommandEndTxnResponse | undefined;
  endTxnOnPartition?: CommandEndTxnOnPartition | undefined;
  endTxnOnPartitionResponse?: CommandEndTxnOnPartitionResponse | undefined;
  endTxnOnSubscription?: CommandEndTxnOnSubscription | undefined;
  endTxnOnSubscriptionResponse?: CommandEndTxnOnSubscriptionResponse | undefined;
  tcClientConnectRequest?: CommandTcClientConnectRequest | undefined;
  tcClientConnectResponse?: CommandTcClientConnectResponse | undefined;
  watchTopicList?: CommandWatchTopicList | undefined;
  watchTopicListSuccess?: CommandWatchTopicListSuccess | undefined;
  watchTopicUpdate?: CommandWatchTopicUpdate | undefined;
  watchTopicListClose?: CommandWatchTopicListClose | undefined;
  topicMigrated?: CommandTopicMigrated | undefined;
}

export enum BaseCommandType {
  CONNECT = 2,
  CONNECTED = 3,
  SUBSCRIBE = 4,
  PRODUCER = 5,
  SEND = 6,
  SEND_RECEIPT = 7,
  SEND_ERROR = 8,
  MESSAGE = 9,
  ACK = 10,
  FLOW = 11,
  UNSUBSCRIBE = 12,
  SUCCESS = 13,
  ERROR = 14,
  CLOSE_PRODUCER = 15,
  CLOSE_CONSUMER = 16,
  PRODUCER_SUCCESS = 17,
  PING = 18,
  PONG = 19,
  REDELIVER_UNACKNOWLEDGED_MESSAGES = 20,
  PARTITIONED_METADATA = 21,
  PARTITIONED_METADATA_RESPONSE = 22,
  LOOKUP = 23,
  LOOKUP_RESPONSE = 24,
  CONSUMER_STATS = 25,
  CONSUMER_STATS_RESPONSE = 26,
  REACHED_END_OF_TOPIC = 27,
  SEEK = 28,
  GET_LAST_MESSAGE_ID = 29,
  GET_LAST_MESSAGE_ID_RESPONSE = 30,
  ACTIVE_CONSUMER_CHANGE = 31,
  GET_TOPICS_OF_NAMESPACE = 32,
  GET_TOPICS_OF_NAMESPACE_RESPONSE = 33,
  GET_SCHEMA = 34,
  GET_SCHEMA_RESPONSE = 35,
  AUTH_CHALLENGE = 36,
  AUTH_RESPONSE = 37,
  ACK_RESPONSE = 38,
  GET_OR_CREATE_SCHEMA = 39,
  GET_OR_CREATE_SCHEMA_RESPONSE = 40,
  NEW_TXN = 50,
  NEW_TXN_RESPONSE = 51,
  ADD_PARTITION_TO_TXN = 52,
  ADD_PARTITION_TO_TXN_RESPONSE = 53,
  ADD_SUBSCRIPTION_TO_TXN = 54,
  ADD_SUBSCRIPTION_TO_TXN_RESPONSE = 55,
  END_TXN = 56,
  END_TXN_RESPONSE = 57,
  END_TXN_ON_PARTITION = 58,
  END_TXN_ON_PARTITION_RESPONSE = 59,
  END_TXN_ON_SUBSCRIPTION = 60,
  END_TXN_ON_SUBSCRIPTION_RESPONSE = 61,
  TC_CLIENT_CONNECT_REQUEST = 62,
  TC_CLIENT_CONNECT_RESPONSE = 63,
  WATCH_TOPIC_LIST = 64,
  WATCH_TOPIC_LIST_SUCCESS = 65,
  WATCH_TOPIC_UPDATE = 66,
  WATCH_TOPIC_LIST_CLOSE = 67,
  TOPIC_MIGRATED = 68,
  UNRECOGNIZED = -1,
}
